from telebot import TeleBot
from telebot.types import Message, CallbackQuery
from time import sleep
from pprint import pprint
from classes import Status
import keyboards as kb
import variable as v
import functions as func

bot = TeleBot(v.token)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

@bot.message_handler(commands=['start'])
# def start(message: Message):
#     # bot.delete_message(message.chat.id, message.id)
#     bot.send_photo(message.chat.id, photo=v.photo_intro)
#     menu(message)


def menu(message: Message):
    chat_id = message.chat.id

    user = func.find_person(person_id=chat_id)
    
    if user:

        if user.status == Status.dispatcher:
            text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.name}!üñê
–í–∞—à —Å—Ç–∞—Ç—É—Å: {user.status}üëç

–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤üìÑ
- –∑–∞—á–∏—Å–ª—è—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏üíµ
- –≤–∏–¥–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µüëÅ

–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—éüõ†
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text, reply_markup=kb.dispatcher_start)

        elif user.status == Status.courier:
            text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.name}!üñê
–í–∞—à —Å—Ç–∞—Ç—É—Å: {user.status}üëç

–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –≤—ã–±–æ—Ä –∑–∞–∫–∞–∑–æ–≤üìÑ
- –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å—á—ë—Ç–∞üíµ

–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—éüõ†
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text, reply_markup=kb.courier_start)

        elif user.status == Status.application:
            text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.name}!üñê
–í–∞—à —Å—Ç–∞—Ç—É—Å: {user.status}üëç

–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–≤–æ–Ω–∏—Ç—å—Å—è —Å –≤–∞–º–∏‚è≥
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text, reply_markup=kb.application_start)
  
        else:
            text = f"""
üö´üö´üö´–û–®–ò–ë–ö–êüö´üö´üö´
–í—ã –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω!ü´†
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!ü§µ
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text)

    else:
        text = f"""
–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!üñê

–Ø –±–æ—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ "–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –ú–∏—Ö–∞–ª—ã—á", —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Å–ª—É–∂–µ–±–Ω—ã–π —Ü–µ–ª–µ–πüöô
–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞!‚ùå

–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—Éüòâ
        """
        bot.delete_message(chat_id, message.id)
        bot.send_message(message.chat.id, text, reply_markup=kb.incognito_start)


@bot.callback_query_handler(func=lambda callback: callback.data in ["apply", "no_start"])
def starting(callback: CallbackQuery, msg: Message = None):
    chat_id = callback.message.chat.id
    message_edit = callback.message
    
    if callback.data == "apply":
        text = f"""
–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à–∏ –Ω–∞—Å—Ç–æ—è—â–∏–µ –§–ò–û
–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á 
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id
        )
        bot.register_next_step_handler(callback.message, get_full_name, message_edit)

    elif callback.data == "no_start":
        text = f"""
–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ, {callback.message.chat.first_name}!üñê
–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë!
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id
        )

def get_full_name(message: Message, message_edit: Message):
    chat_id = message.chat.id
    fio = message.text.split()

    bot.delete_message(chat_id, message.id)

    text = f"""
–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞üì±
"""
    
    bot.delete_message(chat_id, message_edit.id)
    message_edit = bot.send_message(chat_id, text, reply_markup=kb.get_phone)

    bot.register_next_step_handler(message, get_phone_number, message_edit, fio)

def get_phone_number(message: Message, message_edit: Message, fio: list):
    chat_id = message.chat.id
    surname, name, patronymic = fio
    phone_number = int(str(message.contact.phone_number).replace("+7", "8", 1))

    func.add_application(
        data_user={
            "id": chat_id,
            "name": name,
            "surname": surname,
            "patronymic": patronymic,
            "phone_number": phone_number
        }
    )
    text = f"""
–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!‚úÖ
–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startüõ†
"""
    bot.delete_message(chat_id, message.id)
    bot.delete_message(chat_id, message_edit.id)
    bot.send_message(chat_id, text)


@bot.callback_query_handler(func=lambda callback: callback.data in ["virtual_counts", "work_with_orders", "documentation", "back_main"])
def courier(callback: CallbackQuery, msg: Message = None):
    chat_id = callback.message.chat.id
    message_edit = callback.message
    
    if callback.data == "virtual_counts":
        text = f"""
–í–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á—ë—Ç: {func.find_person(person_id=chat_id).virtual_counts} —Ä—É–±–ª–µ–πüíµ
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "work_with_orders":
        text = f"""
–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüö´
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "documentation":
        text = f"""
–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüö´
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "back_main":
        menu(callback.message)


@bot.callback_query_handler(func=lambda callback: callback.data in ["work_with_orders_admin", "virtual_counts_admin", 
                                                                    "personal_data", "look_cash", "replenish_cash"])
def admin(callback: CallbackQuery, msg: Message = None):
    chat_id = callback.message.chat.id
    
    if callback.data == "work_with_orders_admin":
        text = f"""
–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüö´
–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—åüõ†
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "virtual_counts_admin":
        text = f"""
–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—åüõ†
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.virtual_cash_admin_select
        )

    elif callback.data == "personal_data":
        text = f"""
–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏?üìë
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.personal_data_select_kb
        )

    elif callback.data == "look_cash":
        text = f"""
–í—ã–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —É –∫–æ–≥–æ –∫–∞–∫–æ–π –±–∞–ª–∞–Ω—Åüö´
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "replenish_cash":
        text = f"""
–ö–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á—ë—Ç?üßê
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
        )

        bot.edit_message_reply_markup(
            chat_id=chat_id,
            message_id=callback.message.id,
            reply_markup=kb.create_kb_cash()
        )

        # bot.delete_message(chat_id, callback.message.id)
        # bot.send_message(chat_id, text, reply_markup=kb.create_kb_cash())


@bot.callback_query_handler(func=lambda callback: "cash_select" in callback.data)
def select_user_cash(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    user_id = callback.data.split(sep="&")[1]
    user = func.find_person(person_id=user_id)
    text = f"""
–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞—á–∏—Å–∏–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "{user.surname} {user.name} {user.patronymic}"?üßê
–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Çüí∞
"""
    bot.delete_message(chat_id, callback.message.id)
    msg = bot.send_message(chat_id, text, reply_markup=kb.create_money_kb(depth=39))

    bot.register_next_step_handler(callback.message, enrollment, user_id, user, msg)


def enrollment(message: Message, user_id: int, user, msg: Message):
    chat_id = message.chat.id
    price = message.text[:-1]
    text = f"""
–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞—á–∏—Å–ª–∏—Ç—å "{message.text}" –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "{user.surname} {user.name} {user.patronymic}"?üßê
"""

    bot.delete_message(chat_id, message_id=message.id)
    bot.delete_message(chat_id, message_id=msg.id)

    msg = bot.send_message(chat_id, text, reply_markup=kb.yes_no_reply_kb)
    bot.register_next_step_handler(message, enrollment_final, price, user, msg)


def enrollment_final(message: Message, price: int, user, msg: Message):
    chat_id = message.chat.id

    if message.text == "–î–∞‚úÖ":
        text = f"""
–°—É–º–º–∞ –≤ "{price}üíµ" –∑–∞—á–∏—Å–ª–µ–Ω–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "{user.surname} {user.name} {user.patronymic}"‚òëÔ∏è
"""        
        func.enrollment_cash(person_id=user.user_id, price=price)

        bot.send_message(
            chat_id=user.user_id,
            text=f"–ù–∞ –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {price}üíµü§©"    
            ) 
    elif message.text == "–ù–µ—Ç‚ùå":
        text = f"""
–°—É–º–º–∞ –≤ "{price}üíµ" –Ω–µ –∑–∞—á–∏—Å–ª–µ–Ω–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "{user.surname} {user.name} {user.patronymic}"‚ùå
"""
    else:
        text = f"""
–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Öüö´
""" 
    bot.delete_message(chat_id, message_id=message.id)
    bot.delete_message(chat_id, message_id=msg.id)
    bot.send_message(chat_id, text, reply_markup=kb.back_kb)


@bot.callback_query_handler(func=lambda callback: callback.data in ["statistics", "loading", "download",
                                                                    "download_persons_data", "dowload_orders",
                                                                    "loading_orders", "loading_persons_data"])
def load_dowl_data(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    
    if callback.data == "statistics":
        text = f"""
–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüö´
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "loading":
        text = f"""
–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å?üñ®
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.personal_data_loading_kb
        )

    elif callback.data == "download":
        text = f"""
–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–∫–∞—á–∞—Ç—å?üñ®
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.personal_data_dowload_kb
        )

    elif callback.data == "download_persons_data":
        text = f"""
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ xlsx-—Ñ–∞–π–ª–∞üìÑ

‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í–ù–ò–ú–ê–ù–ò–ï‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è
–ó–∞–ø–æ–ª–Ω—è–π—Ç–µ –¥–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ!
–ü—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å xlsx-—Ñ–∞–π–ª–µ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!
"""
        bot.delete_message(chat_id, callback.message.id)

        bot.send_document(
            chat_id=chat_id,
            document=func.created_xlsx_persons_data(),
            caption=text,
            reply_markup=kb.back_kb,
            visible_file_name="–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.xlsx",
        )
        
    elif callback.data == "dowload_orders":
        text = f"""
–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüö´
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )

    elif callback.data == "loading_orders":
        text = f"""
–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüö´
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id,
            reply_markup=kb.back_kb
        )    

    elif callback.data == "loading_persons_data":
        text = f"""
–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ xlsx-—Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!

‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í–ù–ò–ú–ê–ù–ò–ï‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è
–ó–∞–ø–æ–ª–Ω—è–π—Ç–µ –¥–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ!
–ü—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å xlsx-—Ñ–∞–π–ª–µ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id
        )

        bot.register_next_step_handler(callback.message, dowload_xlsx_file, callback.message)


def dowload_xlsx_file(message: Message, msg: Message):
    chat_id = message.chat.id

    bot.delete_message(chat_id, message.id)
    bot.delete_message(chat_id, msg.id)

    if message.document == None:
        bot.send_message(chat_id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª!‚ùå", reply_markup=kb.back_kb)

    else:

        file_path = bot.get_file(message.document.file_id).file_path
        dowload_file = bot.download_file(file_path)

        func.dowload_info_xlsx(dowload_file)

        bot.send_message(chat_id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!‚òëÔ∏è", reply_markup=kb.back_kb)


@bot.message_handler()
def echo(message: Message):
    bot.delete_message(message.chat.id, message.id)
    bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é!üßê\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startüõ†")


bot.infinity_polling(skip_pending=True)
