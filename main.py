from telebot import TeleBot
from telebot.types import Message, CallbackQuery
from time import sleep
from pprint import pprint
from classes import Status
import keyboards as kb
import variable as v
import functions as func

bot = TeleBot(v.token)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

@bot.message_handler(commands=['start'])
def start(message: Message):
    chat_id = message.chat.id

    user = func.find_person(person_id=chat_id)
    
    if user:

        if user.status == Status.dispatcher:
            text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.name}!üñê
–í–∞—à —Å—Ç–∞—Ç—É—Å: {user.status}üëç

–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤üìÑ
- –∑–∞—á–∏—Å–ª—è—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏üíµ
- –≤–∏–¥–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µüëÅ

–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—éüõ†
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text, reply_markup=kb.dispatcher_start)


        elif user.status == Status.courier:
            text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.name}!üñê
–í–∞—à —Å—Ç–∞—Ç—É—Å: {user.status}üëç

–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –≤—ã–±–æ—Ä –∑–∞–∫–∞–∑–æ–≤üìÑ
- –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å—á—ë—Ç–∞üíµ

–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—éüõ†
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text, reply_markup=kb.courier_start)


        elif user.status == Status.application:
            text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.name}!üñê
–í–∞—à —Å—Ç–∞—Ç—É—Å: {user.status}üëç

–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–æ–±–∞–≤–∏—Ç –≤–∞—Å –≤ –±–∞–∑—É‚è≥
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text, reply_markup=kb.application_start)

        
        else:
            text = f"""
üö´üö´üö´–û–®–ò–ë–ö–êüö´üö´üö´
–í—ã –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω!ü´†
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É!ü§µ
            """
            bot.delete_message(chat_id, message.id)
            bot.send_message(message.chat.id, text)

    else:
        text = f"""
–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!üñê

–Ø –±–æ—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ "–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –ú–∏—Ö–∞–ª—ã—á", —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Å–ª—É–∂–µ–±–Ω—ã–π —Ü–µ–ª–µ–πüöô
–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞!‚ùå

–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—Éüòâ
        """
        bot.delete_message(chat_id, message.id)
        bot.send_message(message.chat.id, text, reply_markup=kb.incognito_start)


@bot.callback_query_handler(func=lambda callback: callback.data in ["apply", "no_start"])
def starting(callback: CallbackQuery, msg: Message = None):
    chat_id = callback.message.chat.id
    message_edit = callback.message
    
    if callback.data == "apply":
        text = f"""
–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à–∏ –Ω–∞—Å—Ç–æ—è—â–∏–µ –§–ò–û
–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á 
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id
        )
        bot.register_next_step_handler(callback.message, get_full_name, message_edit)

    elif callback.data == "no_start":
        text = f"""
–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ, {callback.message.chat.first_name}!üñê
–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë!
"""
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id= callback.message.id
        )

def get_full_name(message: Message, message_edit: Message):
    chat_id = message.chat.id
    fio = message.text.split()

    bot.delete_message(chat_id, message.id)

    text = f"""
–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞üì±
"""
  
    bot.delete_message(chat_id, message_edit.id)
    message_edit = bot.send_message(chat_id, text, reply_markup=kb.get_phone)

    bot.register_next_step_handler(message, get_phone_number, message_edit, fio)

def get_phone_number(message: Message, message_edit: Message, fio: list):
    chat_id = message.chat.id
    surname, name, patronymic = fio
    phone_number = int(str(message.contact.phone_number).replace("+7", "8", 1))

    func.add_application(
        data_user={
            "id": chat_id,
            "name": name,
            "surname": surname,
            "patronymic": patronymic,
            "phone_number": phone_number
        }
    )
    
    text = f"""
–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!‚úÖ
–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä –≤–∞—Å –¥–æ–±–∞–≤–∏—Ç –≤ –±–∞–∑—É!‚è≥
–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startüõ†
"""
    bot.delete_message(chat_id, message.id)
    bot.delete_message(chat_id, message_edit.id)
    bot.send_message(chat_id, text)
    


@bot.message_handler()
def echo(message: Message):
    bot.delete_message(message.chat.id, message.id)
    bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é!üßê\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startüõ†")


bot.infinity_polling(skip_pending=True)
